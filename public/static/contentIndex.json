{"100-days-of-code/day-01":{"slug":"100-days-of-code/day-01","filePath":"100-days-of-code/day-01.md","title":"Day 1 - Setup and Goals","links":[],"tags":[],"content":"Day 1 - Setup and Goals\n\nSet up the Quartz-based personal site\nPlanned structure for the 100 Days of Code journal\n"},"100-days-of-code/day-02":{"slug":"100-days-of-code/day-02","filePath":"100-days-of-code/day-02.md","title":"Day 2 - Java OOP Review","links":[],"tags":[],"content":"Day 2 - Java OOP Review\nReviewed key Object-Oriented Programming concepts in Java including inheritance, polymorphism, and encapsulation."},"100-days-of-code/index":{"slug":"100-days-of-code/index","filePath":"100-days-of-code/index.md","title":"100 Days of Code","links":["100-days-of-code/day-01","100-days-of-code/day-02"],"tags":[],"content":"100 Days of Code\nA journal documenting my progress through the 100 Days of Code challenge.\nDaily Logs\n\nDay 1 - Setup and Goals\nDay 2 - Java OOP Review\n"},"about/index":{"slug":"about/index","filePath":"about/index.md","title":"About Me","links":[],"tags":[],"content":"About Me\nI am a backend-focused software developer specializing in Java and Spring Boot.\nI document my learning journey here to share knowledge and track progress in various areas such as Java, DSA, and software development best practices."},"blog/getting-started-quartz":{"slug":"blog/getting-started-quartz","filePath":"blog/getting-started-quartz.md","title":"Getting Started with Quartz","links":[],"tags":[],"content":"Getting Started with Quartz\nA quick guide on setting up and deploying a Quartz-powered personal site."},"blog/index":{"slug":"blog/index","filePath":"blog/index.md","title":"Blog","links":["blog/getting-started-quartz"],"tags":[],"content":"Blog\nInsights and tutorials on software development topics.\n\nGetting Started with Quartz\n"},"contact/index":{"slug":"contact/index","filePath":"contact/index.md","title":"Contact","links":["mailto:hello@wims.dev"],"tags":[],"content":"Contact\nFor inquiries or collaborations, reach out via email: hello@wims.dev"},"core-java/generics":{"slug":"core-java/generics","filePath":"core-java/generics.md","title":"Generics","links":[],"tags":[],"content":"Generics\nUnderstanding Java Generics and how they provide type safety and flexibility."},"core-java/index":{"slug":"core-java/index","filePath":"core-java/index.md","title":"Core Java","links":["core-java/oop-basics","core-java/multithreading","core-java/generics"],"tags":[],"content":"Core Java\nComprehensive notes on Core Java topics.\nTopics\n\nOOP Basics\nMultithreading\nGenerics\n"},"core-java/multithreading":{"slug":"core-java/multithreading","filePath":"core-java/multithreading.md","title":"Multithreading","links":[],"tags":[],"content":"Multithreading\nNotes on creating and managing threads in Java, synchronization, and concurrency best practices."},"core-java/oop-basics":{"slug":"core-java/oop-basics","filePath":"core-java/oop-basics.md","title":"OOP Basics","links":[],"tags":[],"content":"OOP Basics\nCovers the four core principles of Object-Oriented Programming: encapsulation, inheritance, polymorphism, and abstraction."},"dsa/arrays":{"slug":"dsa/arrays","filePath":"dsa/arrays.md","title":"Arrays","links":[],"tags":[],"content":"Arrays\nConcepts and common problems involving arrays, including traversals, rotations, and subarray sum calculations."},"dsa/index":{"slug":"dsa/index","filePath":"dsa/index.md","title":"Data Structures and Algorithms","links":["dsa/arrays","dsa/linked-lists","dsa/trees"],"tags":[],"content":"Data Structures and Algorithms\nA structured guide to fundamental DSA concepts and patterns.\nTopics\n\nArrays\nLinked Lists\nTrees\n"},"dsa/linked-lists":{"slug":"dsa/linked-lists","filePath":"dsa/linked-lists.md","title":"Linked Lists","links":[],"tags":[],"content":"Linked Lists\nOverview of singly and doubly linked lists, operations, and common problems."},"dsa/trees":{"slug":"dsa/trees","filePath":"dsa/trees.md","title":"Trees","links":[],"tags":[],"content":"Trees\nIntroduction to binary trees, traversals, and fundamental operations."},"effective-java/index":{"slug":"effective-java/index","filePath":"effective-java/index.md","title":"Effective Java","links":["effective-java/item-01-static-factory-methods","effective-java/item-02-builder-pattern"],"tags":[],"content":"Effective Java Notes\nConcise notes and summaries from Effective Java (3rd Edition).\nItems\n\nItem 1: Static Factory Methods\nItem 2: Builder Pattern\n"},"effective-java/item-01-static-factory-methods":{"slug":"effective-java/item-01-static-factory-methods","filePath":"effective-java/item-01-static-factory-methods.md","title":"Item 1 - Static Factory Methods","links":[],"tags":[],"content":"Item 1 - Static Factory Methods\nStatic factory methods are an alternative to constructors for creating objects. They improve readability and can return cached or subtype instances."},"effective-java/item-02-builder-pattern":{"slug":"effective-java/item-02-builder-pattern","filePath":"effective-java/item-02-builder-pattern.md","title":"Item 2 - Builder Pattern","links":[],"tags":[],"content":"Item 2 - Builder Pattern\nThe Builder Pattern is useful for creating objects with many optional parameters in a readable and maintainable way."},"index":{"slug":"index","filePath":"index.md","title":"Home","links":["about/","projects/","effective-java/","100-days-of-code/","dsa/","core-java/","spring-boot/","blog/","contact/"],"tags":[],"content":"Welcome to WIMS.dev\nIâ€™m WIMS, a backend-focused software developer who works with Java, Spring Boot, and modern web back-end technologies.\nThis site is my central hub for articles, study notes, and project documentation.\nSections\n\nAbout Me\nProjects\nEffective Java\n100 Days of Code\nDSA\nCore Java\nSpring Boot\nBlog\nContact\n"},"projects/index":{"slug":"projects/index","filePath":"projects/index.md","title":"Projects","links":["projects/spring-api","projects/quartz-site"],"tags":[],"content":"Projects\nA curated list of projects I have worked on.\n\nREST API with Spring Boot\nQuartz-powered Personal Site\n"},"projects/quartz-site":{"slug":"projects/quartz-site","filePath":"projects/quartz-site.md","title":"Quartz-powered Personal Site","links":[],"tags":[],"content":"Quartz-powered Personal Site\nA professional personal knowledge site built using Quartz and deployed on Cloudflare Pages."},"projects/spring-api":{"slug":"projects/spring-api","filePath":"projects/spring-api.md","title":"REST API with Spring Boot","links":[],"tags":[],"content":"REST API with Spring Boot\nA production-grade REST API built using Spring Boot with the following features:\n\nJWT Authentication\nPostgreSQL Database Integration\nDockerized Deployment\n"},"spring-boot/beans":{"slug":"spring-boot/beans","filePath":"spring-boot/beans.md","title":"Spring Beans","links":[],"tags":[],"content":"Spring Beans\nExplanation of Spring Beans, their lifecycle, and how they are managed by the Spring container."},"spring-boot/index":{"slug":"spring-boot/index","filePath":"spring-boot/index.md","title":"Spring Boot","links":["spring-boot/intro","spring-boot/beans","spring-boot/rest-apis"],"tags":[],"content":"Spring Boot\nGuides and explanations for building modern web services using Spring Boot.\nTopics\n\nIntroduction\nBeans\nREST APIs\n"},"spring-boot/intro":{"slug":"spring-boot/intro","filePath":"spring-boot/intro.md","title":"Introduction to Spring Boot","links":[],"tags":[],"content":"Introduction to Spring Boot\nAn overview of Spring Boot and how it simplifies application development by providing default configurations and embedded servers."},"spring-boot/rest-apis":{"slug":"spring-boot/rest-apis","filePath":"spring-boot/rest-apis.md","title":"REST APIs with Spring Boot","links":[],"tags":[],"content":"REST APIs with Spring Boot\nGuide to creating REST APIs with Spring Boot using controllers, services, and repositories."}}